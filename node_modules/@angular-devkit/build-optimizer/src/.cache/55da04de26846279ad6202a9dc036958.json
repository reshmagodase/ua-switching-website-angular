{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\format\\format.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\format\\format.js","mtime":1676443216358},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { zeroFill } from '../utils/zero-fill';\r\nimport { isFunction } from '../utils/type-checks';\r\nexport var formatFunctions = {};\r\nexport var formatTokenFunctions = {};\r\n// tslint:disable-next-line\r\nexport var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\r\n// token:    'M'\r\n// padded:   ['MM', 2]\r\n// ordinal:  'Mo'\r\n// callback: function () { this.month() + 1 }\r\nexport function addFormatToken(token, padded, ordinal, callback) {\r\n    if (token) {\r\n        formatTokenFunctions[token] = callback;\r\n    }\r\n    if (padded) {\r\n        formatTokenFunctions[padded[0]] = function () {\r\n            return zeroFill(callback.apply(null, arguments), padded[1], padded[2]);\r\n        };\r\n    }\r\n    if (ordinal) {\r\n        formatTokenFunctions[ordinal] = function (date, opts) {\r\n            return opts.locale.ordinal(callback.apply(null, arguments), token);\r\n        };\r\n    }\r\n}\r\nexport function makeFormatFunction(format) {\r\n    var array = format.match(formattingTokens);\r\n    var length = array.length;\r\n    var formatArr = new Array(length);\r\n    for (var i = 0; i < length; i++) {\r\n        formatArr[i] = formatTokenFunctions[array[i]]\r\n            ? formatTokenFunctions[array[i]]\r\n            : removeFormattingTokens(array[i]);\r\n    }\r\n    return function (date, locale, isUTC, offset) {\r\n        if (offset === void 0) { offset = 0; }\r\n        var output = '';\r\n        for (var j = 0; j < length; j++) {\r\n            output += isFunction(formatArr[j])\r\n                ? formatArr[j].call(null, date, { format: format, locale: locale, isUTC: isUTC, offset: offset })\r\n                : formatArr[j];\r\n        }\r\n        return output;\r\n    };\r\n}\r\nfunction removeFormattingTokens(input) {\r\n    if (input.match(/\\[[\\s\\S]/)) {\r\n        return input.replace(/^\\[|\\]$/g, '');\r\n    }\r\n    return input.replace(/\\\\/g, '');\r\n}\r\n//# sourceMappingURL=format.js.map",null]}