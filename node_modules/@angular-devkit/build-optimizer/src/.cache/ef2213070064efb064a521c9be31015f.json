{"remainingRequest":"/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/ngx-bootstrap/chronos/units/year.js","dependencies":[{"path":"/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/ngx-bootstrap/chronos/units/year.js","mtime":1538990516610},{"path":"/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/cache-loader/dist/cjs.js","mtime":1538990516170},{"path":"/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1538990515734}],"contextDependencies":[],"result":["import { addFormatToken } from '../format/format';\nimport { getFullYear } from '../utils/date-getters';\nimport { addRegexToken, match1to2, match1to4, match1to6, match2, match4, match6, matchSigned } from '../parse/regex';\nimport { addParseToken } from '../parse/token';\nimport { YEAR } from './constants';\nimport { toInt } from '../utils/type-checks';\nimport { addUnitPriority } from './priorities';\nimport { addUnitAlias } from './aliases';\n// FORMATTING\nfunction getYear(date, opts) {\n    return getFullYear(date, opts.isUTC).toString();\n}\naddFormatToken('Y', null, null, function (date, opts) {\n    var y = getFullYear(date, opts.isUTC);\n    return y <= 9999 ? y.toString(10) : \"+\" + y;\n});\naddFormatToken(null, ['YY', 2, false], null, function (date, opts) {\n    return (getFullYear(date, opts.isUTC) % 100).toString(10);\n});\naddFormatToken(null, ['YYYY', 4, false], null, getYear);\naddFormatToken(null, ['YYYYY', 5, false], null, getYear);\naddFormatToken(null, ['YYYYYY', 6, true], null, getYear);\n// ALIASES\naddUnitAlias('year', 'y');\n// PRIORITIES\naddUnitPriority('year', 1);\n// PARSING\naddRegexToken('Y', matchSigned);\naddRegexToken('YY', match1to2, match2);\naddRegexToken('YYYY', match1to4, match4);\naddRegexToken('YYYYY', match1to6, match6);\naddRegexToken('YYYYYY', match1to6, match6);\naddParseToken(['YYYYY', 'YYYYYY'], YEAR);\naddParseToken('YYYY', function (input, array, config) {\n    array[YEAR] = input.length === 2 ? parseTwoDigitYear(input) : toInt(input);\n    return config;\n});\naddParseToken('YY', function (input, array, config) {\n    array[YEAR] = parseTwoDigitYear(input);\n    return config;\n});\naddParseToken('Y', function (input, array, config) {\n    array[YEAR] = parseInt(input, 10);\n    return config;\n});\nexport function parseTwoDigitYear(input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n}\nexport function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n}\nexport function isLeapYear(year) {\n    return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n}\n//# sourceMappingURL=year.js.map",null]}