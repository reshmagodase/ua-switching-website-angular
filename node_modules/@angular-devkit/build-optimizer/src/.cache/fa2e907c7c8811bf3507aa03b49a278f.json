{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\units\\month.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\units\\month.js","mtime":1676443216631},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { addFormatToken } from '../format/format';\r\nimport { isLeapYear } from './year';\r\nimport { mod } from '../utils';\r\nimport { getMonth } from '../utils/date-getters';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { MONTH } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\nimport { getParsingFlags } from '../create/parsing-flags';\r\n// todo: this is duplicate, source in date-getters.ts\r\nexport function daysInMonth(year, month) {\r\n    if (isNaN(year) || isNaN(month)) {\r\n        return NaN;\r\n    }\r\n    var modMonth = mod(month, 12);\r\n    var _year = year + (month - modMonth) / 12;\r\n    return modMonth === 1\r\n        ? isLeapYear(_year) ? 29 : 28\r\n        : (31 - modMonth % 7 % 2);\r\n}\r\n// FORMATTING\r\naddFormatToken('M', ['MM', 2, false], 'Mo', function (date, opts) {\r\n    return (getMonth(date, opts.isUTC) + 1).toString(10);\r\n});\r\naddFormatToken('MMM', null, null, function (date, opts) {\r\n    return opts.locale.monthsShort(date, opts.format, opts.isUTC);\r\n});\r\naddFormatToken('MMMM', null, null, function (date, opts) {\r\n    return opts.locale.months(date, opts.format, opts.isUTC);\r\n});\r\n// ALIASES\r\naddUnitAlias('month', 'M');\r\n// PRIORITY\r\naddUnitPriority('month', 8);\r\n// PARSING\r\naddRegexToken('M', match1to2);\r\naddRegexToken('MM', match1to2, match2);\r\naddRegexToken('MMM', function (isStrict, locale) {\r\n    return locale.monthsShortRegex(isStrict);\r\n});\r\naddRegexToken('MMMM', function (isStrict, locale) {\r\n    return locale.monthsRegex(isStrict);\r\n});\r\naddParseToken(['M', 'MM'], function (input, array, config) {\r\n    array[MONTH] = toInt(input) - 1;\r\n    return config;\r\n});\r\naddParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\r\n    var month = config._locale.monthsParse(input, token, config._strict);\r\n    // if we didn't find a month name, mark the date as invalid.\r\n    if (month != null) {\r\n        array[MONTH] = month;\r\n    }\r\n    else {\r\n        getParsingFlags(config).invalidMonth = !!input;\r\n    }\r\n    return config;\r\n});\r\n//# sourceMappingURL=month.js.map",null]}