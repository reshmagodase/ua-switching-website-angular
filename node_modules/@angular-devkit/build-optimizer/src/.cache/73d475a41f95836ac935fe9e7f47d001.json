{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\create\\from-anything.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\create\\from-anything.js","mtime":1676443216290},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { isArray, isDate, isNumber, isObject, isObjectEmpty, isString, isUndefined } from '../utils/type-checks';\r\nimport { getLocale } from '../locale/locales';\r\nimport { createInvalid, isValid } from './valid';\r\nimport { configFromStringAndArray } from './from-string-and-array';\r\nimport { configFromStringAndFormat } from './from-string-and-format';\r\nimport { cloneDate } from './clone';\r\nimport { configFromString } from './from-string';\r\nimport { configFromArray } from './from-array';\r\nimport { configFromObject } from './from-object';\r\nimport { checkOverflow } from './check-overflow';\r\nfunction createFromConfig(config) {\r\n    var res = checkOverflow(prepareConfig(config));\r\n    // todo: remove, in moment.js it's never called cuz of moment constructor\r\n    res._d = new Date(res._d != null ? res._d.getTime() : NaN);\r\n    if (!isValid(Object.assign({}, res, { _isValid: null }))) {\r\n        res._d = new Date(NaN);\r\n    }\r\n    // todo: update offset\r\n    /*if (res._nextDay) {\r\n        // Adding is smart enough around DST\r\n        res._d = add(res._d, 1, 'day');\r\n        res._nextDay = undefined;\r\n      }*/\r\n    return res;\r\n}\r\nexport function prepareConfig(config) {\r\n    var input = config._i;\r\n    var format = config._f;\r\n    config._locale = config._locale || getLocale(config._l);\r\n    if (input === null || (format === undefined && input === '')) {\r\n        return createInvalid(config, { nullInput: true });\r\n    }\r\n    if (isString(input)) {\r\n        config._i = input = config._locale.preparse(input);\r\n    }\r\n    if (isDate(input)) {\r\n        config._d = cloneDate(input);\r\n        return config;\r\n    }\r\n    // todo: add check for recursion\r\n    if (isArray(format)) {\r\n        configFromStringAndArray(config);\r\n    }\r\n    else if (format) {\r\n        configFromStringAndFormat(config);\r\n    }\r\n    else {\r\n        configFromInput(config);\r\n    }\r\n    if (!isValid(config)) {\r\n        config._d = null;\r\n    }\r\n    return config;\r\n}\r\nfunction configFromInput(config) {\r\n    var input = config._i;\r\n    if (isUndefined(input)) {\r\n        config._d = new Date();\r\n    }\r\n    else if (isDate(input)) {\r\n        config._d = cloneDate(input);\r\n    }\r\n    else if (isString(input)) {\r\n        configFromString(config);\r\n    }\r\n    else if (isArray(input) && input.length) {\r\n        var _arr = input.slice(0);\r\n        config._a = _arr.map(function (obj) { return isString(obj) ? parseInt(obj, 10) : obj; });\r\n        configFromArray(config);\r\n    }\r\n    else if (isObject(input)) {\r\n        configFromObject(config);\r\n    }\r\n    else if (isNumber(input)) {\r\n        // from milliseconds\r\n        config._d = new Date(input);\r\n    }\r\n    else {\r\n        //   hooks.createFromInputFallback(config);\r\n        return createInvalid(config);\r\n    }\r\n    return config;\r\n}\r\nexport function createLocalOrUTC(input, format, localeKey, strict, isUTC) {\r\n    var config = {};\r\n    var _input = input;\r\n    // params switch -> skip; test it well\r\n    // if (localeKey === true || localeKey === false) {\r\n    //     strict = localeKey;\r\n    //     localeKey = undefined;\r\n    // }\r\n    // todo: fail fast and return not valid date\r\n    if ((isObject(_input) && isObjectEmpty(_input)) || (isArray(_input) && _input.length === 0)) {\r\n        _input = undefined;\r\n    }\r\n    // object construction must be done this way.\r\n    // https://github.com/moment/moment/issues/1423\r\n    // config._isAMomentObject = true;\r\n    config._useUTC = config._isUTC = isUTC;\r\n    config._l = localeKey;\r\n    config._i = _input;\r\n    config._f = format;\r\n    config._strict = strict;\r\n    return createFromConfig(config);\r\n}\r\n//# sourceMappingURL=from-anything.js.map",null]}