{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\datepicker\\engine\\flag-days-calendar.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\datepicker\\engine\\flag-days-calendar.js","mtime":1676443216838},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { isSameDay, isSameMonth } from '../../chronos/utils/date-getters';\r\nimport { isAfter, isBefore } from '../../chronos/utils/date-compare';\r\nimport { isMonthDisabled } from '../utils/bs-calendar-utils';\r\nimport { shiftDate } from '../../chronos/utils/date-setters';\r\nexport function flagDaysCalendar(formattedMonth, options) {\r\n    formattedMonth.weeks.forEach(function (week, weekIndex) {\r\n        week.days.forEach(function (day, dayIndex) {\r\n            // datepicker\r\n            var isOtherMonth = !isSameMonth(day.date, formattedMonth.month);\r\n            var isHovered = !isOtherMonth && isSameDay(day.date, options.hoveredDate);\r\n            // date range picker\r\n            var isSelectionStart = !isOtherMonth &&\r\n                options.selectedRange &&\r\n                isSameDay(day.date, options.selectedRange[0]);\r\n            var isSelectionEnd = !isOtherMonth &&\r\n                options.selectedRange &&\r\n                isSameDay(day.date, options.selectedRange[1]);\r\n            var isSelected = (!isOtherMonth && isSameDay(day.date, options.selectedDate)) ||\r\n                isSelectionStart ||\r\n                isSelectionEnd;\r\n            var isInRange = !isOtherMonth &&\r\n                options.selectedRange &&\r\n                isDateInRange(day.date, options.selectedRange, options.hoveredDate);\r\n            var isDisabled = options.isDisabled ||\r\n                isBefore(day.date, options.minDate, 'day') ||\r\n                isAfter(day.date, options.maxDate, 'day');\r\n            // decide update or not\r\n            var newDay = Object.assign({}, day, {\r\n                isOtherMonth: isOtherMonth,\r\n                isHovered: isHovered,\r\n                isSelected: isSelected,\r\n                isSelectionStart: isSelectionStart,\r\n                isSelectionEnd: isSelectionEnd,\r\n                isInRange: isInRange,\r\n                isDisabled: isDisabled\r\n            });\r\n            if (day.isOtherMonth !== newDay.isOtherMonth ||\r\n                day.isHovered !== newDay.isHovered ||\r\n                day.isSelected !== newDay.isSelected ||\r\n                day.isSelectionStart !== newDay.isSelectionStart ||\r\n                day.isSelectionEnd !== newDay.isSelectionEnd ||\r\n                day.isDisabled !== newDay.isDisabled ||\r\n                day.isInRange !== newDay.isInRange) {\r\n                week.days[dayIndex] = newDay;\r\n            }\r\n        });\r\n    });\r\n    // todo: add check for linked calendars\r\n    formattedMonth.hideLeftArrow =\r\n        options.isDisabled ||\r\n            (options.monthIndex > 0 && options.monthIndex !== options.displayMonths);\r\n    formattedMonth.hideRightArrow =\r\n        options.isDisabled ||\r\n            (options.monthIndex < options.displayMonths &&\r\n                options.monthIndex + 1 !== options.displayMonths);\r\n    formattedMonth.disableLeftArrow = isMonthDisabled(shiftDate(formattedMonth.month, { month: -1 }), options.minDate, options.maxDate);\r\n    formattedMonth.disableRightArrow = isMonthDisabled(shiftDate(formattedMonth.month, { month: 1 }), options.minDate, options.maxDate);\r\n    return formattedMonth;\r\n}\r\nfunction isDateInRange(date, selectedRange, hoveredDate) {\r\n    if (!date || !selectedRange[0]) {\r\n        return false;\r\n    }\r\n    if (selectedRange[1]) {\r\n        return date > selectedRange[0] && date <= selectedRange[1];\r\n    }\r\n    if (hoveredDate) {\r\n        return date > selectedRange[0] && date <= hoveredDate;\r\n    }\r\n    return false;\r\n}\r\n//# sourceMappingURL=flag-days-calendar.js.map",null]}