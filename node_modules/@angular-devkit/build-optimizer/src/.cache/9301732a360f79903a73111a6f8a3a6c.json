{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\units\\week.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\units\\week.js","mtime":1676443216663},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { addFormatToken } from '../format/format';\r\nimport { weekOfYear } from './week-calendar-utils';\r\nimport { addRegexToken, match1to2, match2 } from '../parse/regex';\r\nimport { addUnitAlias } from './aliases';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addWeekParseToken } from '../parse/token';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { getLocale } from '../locale/locales';\r\nimport { add } from '../moment/add-subtract';\r\n// FORMATTING\r\naddFormatToken('w', ['ww', 2, false], 'wo', function (date, opts) {\r\n    return getWeek(date, opts.locale).toString(10);\r\n});\r\naddFormatToken('W', ['WW', 2, false], 'Wo', function (date) {\r\n    return getISOWeek(date).toString(10);\r\n});\r\n// ALIASES\r\naddUnitAlias('week', 'w');\r\naddUnitAlias('isoWeek', 'W');\r\n// PRIORITIES\r\naddUnitPriority('week', 5);\r\naddUnitPriority('isoWeek', 5);\r\n// PARSING\r\naddRegexToken('w', match1to2);\r\naddRegexToken('ww', match1to2, match2);\r\naddRegexToken('W', match1to2);\r\naddRegexToken('WW', match1to2, match2);\r\naddWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\r\n    week[token.substr(0, 1)] = toInt(input);\r\n    return config;\r\n});\r\n// export function getSetWeek (input) {\r\n//   var week = this.localeData().week(this);\r\n//   return input == null ? week : this.add((input - week) * 7, 'd');\r\n// }\r\nexport function setWeek(date, input, locale) {\r\n    if (locale === void 0) { locale = getLocale(); }\r\n    var week = getWeek(date, locale);\r\n    return add(date, (input - week) * 7, 'day');\r\n}\r\nexport function getWeek(date, locale, isUTC) {\r\n    if (locale === void 0) { locale = getLocale(); }\r\n    return locale.week(date, isUTC);\r\n}\r\n// export function getSetISOWeek (input) {\r\n//   var week = weekOfYear(this, 1, 4).week;\r\n//   return input == null ? week : this.add((input - week) * 7, 'd');\r\n// }\r\nexport function setISOWeek(date, input) {\r\n    var week = getISOWeek(date);\r\n    return add(date, (input - week) * 7, 'day');\r\n}\r\nexport function getISOWeek(date, isUTC) {\r\n    return weekOfYear(date, 1, 4, isUTC).week;\r\n}\r\n//# sourceMappingURL=week.js.map",null]}