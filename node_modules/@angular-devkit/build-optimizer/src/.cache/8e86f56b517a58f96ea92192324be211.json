{"remainingRequest":"/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/ngx-bootstrap/chronos/utils/date-compare.js","dependencies":[{"path":"/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/ngx-bootstrap/chronos/utils/date-compare.js","mtime":1551251660063},{"path":"/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/cache-loader/dist/cjs.js","mtime":1551251659635},{"path":"/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1551251659207}],"contextDependencies":[],"result":["import { endOf, startOf } from './start-end-of';\nexport function isAfter(date1, date2, units) {\n    if (units === void 0) { units = 'milliseconds'; }\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() > date2.valueOf();\n    }\n    return date2.valueOf() < startOf(date1, units).valueOf();\n}\nexport function isBefore(date1, date2, units) {\n    if (units === void 0) { units = 'milliseconds'; }\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() < date2.valueOf();\n    }\n    return endOf(date1, units).valueOf() < date2.valueOf();\n}\nexport function isBetween(date, from, to, units, inclusivity) {\n    if (inclusivity === void 0) { inclusivity = '()'; }\n    var leftBound = inclusivity[0] === '('\n        ? isAfter(date, from, units)\n        : !isBefore(date, from, units);\n    var rightBound = inclusivity[1] === ')'\n        ? isBefore(date, to, units)\n        : !isAfter(date, to, units);\n    return leftBound && rightBound;\n}\nexport function isSame(date1, date2, units) {\n    if (units === void 0) { units = 'milliseconds'; }\n    if (!date1 || !date2) {\n        return false;\n    }\n    if (units === 'milliseconds') {\n        return date1.valueOf() === date2.valueOf();\n    }\n    var inputMs = date2.valueOf();\n    return (startOf(date1, units).valueOf() <= inputMs &&\n        inputMs <= endOf(date1, units).valueOf());\n}\nexport function isSameOrAfter(date1, date2, units) {\n    return isSame(date1, date2, units) || isAfter(date1, date2, units);\n}\nexport function isSameOrBefore(date1, date2, units) {\n    return isSame(date1, date2, units) || isBefore(date1, date2, units);\n}\n//# sourceMappingURL=date-compare.js.map",null]}