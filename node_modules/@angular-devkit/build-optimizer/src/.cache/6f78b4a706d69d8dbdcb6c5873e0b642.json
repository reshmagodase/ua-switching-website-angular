{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\format.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\format.js","mtime":1676443216354},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["// moment.js\r\n// version : 2.18.1\r\n// authors : Tim Wood, Iskren Chernev, Moment.js contributors\r\n// license : MIT\r\n// momentjs.com\r\nimport './units/index';\r\nimport { formatFunctions, makeFormatFunction } from './format/format';\r\nimport { getLocale } from './locale/locales';\r\nimport { isDateValid } from './utils/type-checks';\r\nexport function formatDate(date, format, locale, isUTC, offset) {\r\n    if (offset === void 0) { offset = 0; }\r\n    var _locale = getLocale(locale || 'en');\r\n    if (!_locale) {\r\n        throw new Error(\"Locale \\\"\" + locale + \"\\\" is not defined, please add it with \\\"defineLocale(...)\\\"\");\r\n    }\r\n    var _format = format || (isUTC ? 'YYYY-MM-DDTHH:mm:ss[Z]' : 'YYYY-MM-DDTHH:mm:ssZ');\r\n    var output = formatMoment(date, _format, _locale, isUTC, offset);\r\n    if (!output) {\r\n        return output;\r\n    }\r\n    return _locale.postformat(output);\r\n}\r\n// format date using native date object\r\nexport function formatMoment(date, _format, locale, isUTC, offset) {\r\n    if (offset === void 0) { offset = 0; }\r\n    if (!isDateValid(date)) {\r\n        return locale.invalidDate;\r\n    }\r\n    var format = expandFormat(_format, locale);\r\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\r\n    return formatFunctions[format](date, locale, isUTC, offset);\r\n}\r\nexport function expandFormat(_format, locale) {\r\n    var format = _format;\r\n    var i = 5;\r\n    var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\r\n    var replaceLongDateFormatTokens = function (input) {\r\n        return locale.formatLongDate(input) || input;\r\n    };\r\n    localFormattingTokens.lastIndex = 0;\r\n    while (i >= 0 && localFormattingTokens.test(format)) {\r\n        format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\r\n        localFormattingTokens.lastIndex = 0;\r\n        i -= 1;\r\n    }\r\n    return format;\r\n}\r\n//# sourceMappingURL=format.js.map",null]}