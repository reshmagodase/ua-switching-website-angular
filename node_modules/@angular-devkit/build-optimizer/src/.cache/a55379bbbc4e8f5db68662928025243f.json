{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\units\\hour.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\units\\hour.js","mtime":1676443216621},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { getHours, getMinutes, getSeconds } from '../utils/date-getters';\r\nimport { addFormatToken } from '../format/format';\r\nimport { zeroFill } from '../utils/zero-fill';\r\nimport { addRegexToken, match1to2, match2, match3to4, match5to6 } from '../parse/regex';\r\nimport { addParseToken } from '../parse/token';\r\nimport { HOUR, MINUTE, SECOND } from './constants';\r\nimport { toInt } from '../utils/type-checks';\r\nimport { getParsingFlags } from '../create/parsing-flags';\r\nimport { addUnitPriority } from './priorities';\r\nimport { addUnitAlias } from './aliases';\r\n// FORMATTING\r\nfunction hFormat(date, isUTC) {\r\n    return getHours(date, isUTC) % 12 || 12;\r\n}\r\nfunction kFormat(date, isUTC) {\r\n    return getHours(date, isUTC) || 24;\r\n}\r\naddFormatToken('H', ['HH', 2, false], null, function (date, opts) {\r\n    return getHours(date, opts.isUTC).toString(10);\r\n});\r\naddFormatToken('h', ['hh', 2, false], null, function (date, opts) {\r\n    return hFormat(date, opts.isUTC).toString(10);\r\n});\r\naddFormatToken('k', ['kk', 2, false], null, function (date, opts) {\r\n    return kFormat(date, opts.isUTC).toString(10);\r\n});\r\naddFormatToken('hmm', null, null, function (date, opts) {\r\n    var _h = hFormat(date, opts.isUTC);\r\n    var _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n    return \"\" + _h + _mm;\r\n});\r\naddFormatToken('hmmss', null, null, function (date, opts) {\r\n    var _h = hFormat(date, opts.isUTC);\r\n    var _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n    var _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\r\n    return \"\" + _h + _mm + _ss;\r\n});\r\naddFormatToken('Hmm', null, null, function (date, opts) {\r\n    var _H = getHours(date, opts.isUTC);\r\n    var _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n    return \"\" + _H + _mm;\r\n});\r\naddFormatToken('Hmmss', null, null, function (date, opts) {\r\n    var _H = getHours(date, opts.isUTC);\r\n    var _mm = zeroFill(getMinutes(date, opts.isUTC), 2);\r\n    var _ss = zeroFill(getSeconds(date, opts.isUTC), 2);\r\n    return \"\" + _H + _mm + _ss;\r\n});\r\nfunction meridiem(token, lowercase) {\r\n    addFormatToken(token, null, null, function (date, opts) {\r\n        return opts.locale.meridiem(getHours(date, opts.isUTC), getMinutes(date, opts.isUTC), lowercase);\r\n    });\r\n}\r\nmeridiem('a', true);\r\nmeridiem('A', false);\r\n// ALIASES\r\naddUnitAlias('hour', 'h');\r\n// PRIORITY\r\naddUnitPriority('hour', 13);\r\n// PARSING\r\nfunction matchMeridiem(isStrict, locale) {\r\n    return locale._meridiemParse;\r\n}\r\naddRegexToken('a', matchMeridiem);\r\naddRegexToken('A', matchMeridiem);\r\naddRegexToken('H', match1to2);\r\naddRegexToken('h', match1to2);\r\naddRegexToken('k', match1to2);\r\naddRegexToken('HH', match1to2, match2);\r\naddRegexToken('hh', match1to2, match2);\r\naddRegexToken('kk', match1to2, match2);\r\naddRegexToken('hmm', match3to4);\r\naddRegexToken('hmmss', match5to6);\r\naddRegexToken('Hmm', match3to4);\r\naddRegexToken('Hmmss', match5to6);\r\naddParseToken(['H', 'HH'], HOUR);\r\naddParseToken(['k', 'kk'], function (input, array, config) {\r\n    var kInput = toInt(input);\r\n    array[HOUR] = kInput === 24 ? 0 : kInput;\r\n    return config;\r\n});\r\naddParseToken(['a', 'A'], function (input, array, config) {\r\n    config._isPm = config._locale.isPM(input);\r\n    config._meridiem = input;\r\n    return config;\r\n});\r\naddParseToken(['h', 'hh'], function (input, array, config) {\r\n    array[HOUR] = toInt(input);\r\n    getParsingFlags(config).bigHour = true;\r\n    return config;\r\n});\r\naddParseToken('hmm', function (input, array, config) {\r\n    var pos = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos));\r\n    array[MINUTE] = toInt(input.substr(pos));\r\n    getParsingFlags(config).bigHour = true;\r\n    return config;\r\n});\r\naddParseToken('hmmss', function (input, array, config) {\r\n    var pos1 = input.length - 4;\r\n    var pos2 = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos1));\r\n    array[MINUTE] = toInt(input.substr(pos1, 2));\r\n    array[SECOND] = toInt(input.substr(pos2));\r\n    getParsingFlags(config).bigHour = true;\r\n    return config;\r\n});\r\naddParseToken('Hmm', function (input, array, config) {\r\n    var pos = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos));\r\n    array[MINUTE] = toInt(input.substr(pos));\r\n    return config;\r\n});\r\naddParseToken('Hmmss', function (input, array, config) {\r\n    var pos1 = input.length - 4;\r\n    var pos2 = input.length - 2;\r\n    array[HOUR] = toInt(input.substr(0, pos1));\r\n    array[MINUTE] = toInt(input.substr(pos1, 2));\r\n    array[SECOND] = toInt(input.substr(pos2));\r\n    return config;\r\n});\r\n//# sourceMappingURL=hour.js.map",null]}