{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\core-js\\modules\\es6.number.to-fixed.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\core-js\\modules\\es6.number.to-fixed.js","mtime":1676443204447},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["'use strict';\r\nvar $export = require('./_export');\r\nvar toInteger = require('./_to-integer');\r\nvar aNumberValue = require('./_a-number-value');\r\nvar repeat = require('./_string-repeat');\r\nvar $toFixed = 1.0.toFixed;\r\nvar floor = Math.floor;\r\nvar data = [0, 0, 0, 0, 0, 0];\r\nvar ERROR = 'Number.toFixed: incorrect invocation!';\r\nvar ZERO = '0';\r\n\r\nvar multiply = function (n, c) {\r\n  var i = -1;\r\n  var c2 = c;\r\n  while (++i < 6) {\r\n    c2 += n * data[i];\r\n    data[i] = c2 % 1e7;\r\n    c2 = floor(c2 / 1e7);\r\n  }\r\n};\r\nvar divide = function (n) {\r\n  var i = 6;\r\n  var c = 0;\r\n  while (--i >= 0) {\r\n    c += data[i];\r\n    data[i] = floor(c / n);\r\n    c = (c % n) * 1e7;\r\n  }\r\n};\r\nvar numToString = function () {\r\n  var i = 6;\r\n  var s = '';\r\n  while (--i >= 0) {\r\n    if (s !== '' || i === 0 || data[i] !== 0) {\r\n      var t = String(data[i]);\r\n      s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;\r\n    }\r\n  } return s;\r\n};\r\nvar pow = function (x, n, acc) {\r\n  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);\r\n};\r\nvar log = function (x) {\r\n  var n = 0;\r\n  var x2 = x;\r\n  while (x2 >= 4096) {\r\n    n += 12;\r\n    x2 /= 4096;\r\n  }\r\n  while (x2 >= 2) {\r\n    n += 1;\r\n    x2 /= 2;\r\n  } return n;\r\n};\r\n\r\n$export($export.P + $export.F * (!!$toFixed && (\r\n  0.00008.toFixed(3) !== '0.000' ||\r\n  0.9.toFixed(0) !== '1' ||\r\n  1.255.toFixed(2) !== '1.25' ||\r\n  1000000000000000128.0.toFixed(0) !== '1000000000000000128'\r\n) || !require('./_fails')(function () {\r\n  // V8 ~ Android 4.3-\r\n  $toFixed.call({});\r\n})), 'Number', {\r\n  toFixed: function toFixed(fractionDigits) {\r\n    var x = aNumberValue(this, ERROR);\r\n    var f = toInteger(fractionDigits);\r\n    var s = '';\r\n    var m = ZERO;\r\n    var e, z, j, k;\r\n    if (f < 0 || f > 20) throw RangeError(ERROR);\r\n    // eslint-disable-next-line no-self-compare\r\n    if (x != x) return 'NaN';\r\n    if (x <= -1e21 || x >= 1e21) return String(x);\r\n    if (x < 0) {\r\n      s = '-';\r\n      x = -x;\r\n    }\r\n    if (x > 1e-21) {\r\n      e = log(x * pow(2, 69, 1)) - 69;\r\n      z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);\r\n      z *= 0x10000000000000;\r\n      e = 52 - e;\r\n      if (e > 0) {\r\n        multiply(0, z);\r\n        j = f;\r\n        while (j >= 7) {\r\n          multiply(1e7, 0);\r\n          j -= 7;\r\n        }\r\n        multiply(pow(10, j, 1), 0);\r\n        j = e - 1;\r\n        while (j >= 23) {\r\n          divide(1 << 23);\r\n          j -= 23;\r\n        }\r\n        divide(1 << j);\r\n        multiply(1, 1);\r\n        divide(2);\r\n        m = numToString();\r\n      } else {\r\n        multiply(0, z);\r\n        multiply(1 << -e, 0);\r\n        m = numToString() + repeat.call(ZERO, f);\r\n      }\r\n    }\r\n    if (f > 0) {\r\n      k = m.length;\r\n      m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));\r\n    } else {\r\n      m = s + m;\r\n    } return m;\r\n  }\r\n});\r\n",null]}