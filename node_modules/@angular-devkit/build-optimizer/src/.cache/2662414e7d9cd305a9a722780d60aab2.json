{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\utils\\date-compare.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\utils\\date-compare.js","mtime":1676443216685},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { endOf, startOf } from './start-end-of';\r\nexport function isAfter(date1, date2, units) {\r\n    if (units === void 0) { units = 'milliseconds'; }\r\n    if (!date1 || !date2) {\r\n        return false;\r\n    }\r\n    if (units === 'milliseconds') {\r\n        return date1.valueOf() > date2.valueOf();\r\n    }\r\n    return date2.valueOf() < startOf(date1, units).valueOf();\r\n}\r\nexport function isBefore(date1, date2, units) {\r\n    if (units === void 0) { units = 'milliseconds'; }\r\n    if (!date1 || !date2) {\r\n        return false;\r\n    }\r\n    if (units === 'milliseconds') {\r\n        return date1.valueOf() < date2.valueOf();\r\n    }\r\n    return endOf(date1, units).valueOf() < date2.valueOf();\r\n}\r\nexport function isBetween(date, from, to, units, inclusivity) {\r\n    if (inclusivity === void 0) { inclusivity = '()'; }\r\n    var leftBound = inclusivity[0] === '('\r\n        ? isAfter(date, from, units)\r\n        : !isBefore(date, from, units);\r\n    var rightBound = inclusivity[1] === ')'\r\n        ? isBefore(date, to, units)\r\n        : !isAfter(date, to, units);\r\n    return leftBound && rightBound;\r\n}\r\nexport function isSame(date1, date2, units) {\r\n    if (units === void 0) { units = 'milliseconds'; }\r\n    if (!date1 || !date2) {\r\n        return false;\r\n    }\r\n    if (units === 'milliseconds') {\r\n        return date1.valueOf() === date2.valueOf();\r\n    }\r\n    var inputMs = date2.valueOf();\r\n    return (startOf(date1, units).valueOf() <= inputMs &&\r\n        inputMs <= endOf(date1, units).valueOf());\r\n}\r\nexport function isSameOrAfter(date1, date2, units) {\r\n    return isSame(date1, date2, units) || isAfter(date1, date2, units);\r\n}\r\nexport function isSameOrBefore(date1, date2, units) {\r\n    return isSame(date1, date2, units) || isBefore(date1, date2, units);\r\n}\r\n//# sourceMappingURL=date-compare.js.map",null]}