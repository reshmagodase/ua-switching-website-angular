{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\datepicker\\engine\\flag-years-calendar.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\datepicker\\engine\\flag-years-calendar.js","mtime":1676443216846},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { isSameYear } from '../../chronos/utils/date-getters';\r\nimport { isYearDisabled } from '../utils/bs-calendar-utils';\r\nimport { shiftDate } from '../../chronos/utils/date-setters';\r\nexport function flagYearsCalendar(yearsCalendar, options) {\r\n    yearsCalendar.years.forEach(function (years, rowIndex) {\r\n        years.forEach(function (year, yearIndex) {\r\n            var isHovered = isSameYear(year.date, options.hoveredYear);\r\n            var isDisabled = options.isDisabled ||\r\n                isYearDisabled(year.date, options.minDate, options.maxDate);\r\n            var newMonth = Object.assign(/*{},*/ year, { isHovered: isHovered, isDisabled: isDisabled });\r\n            if (year.isHovered !== newMonth.isHovered ||\r\n                year.isDisabled !== newMonth.isDisabled) {\r\n                yearsCalendar.years[rowIndex][yearIndex] = newMonth;\r\n            }\r\n        });\r\n    });\r\n    // todo: add check for linked calendars\r\n    yearsCalendar.hideLeftArrow =\r\n        options.yearIndex > 0 && options.yearIndex !== options.displayMonths;\r\n    yearsCalendar.hideRightArrow =\r\n        options.yearIndex < options.displayMonths &&\r\n            options.yearIndex + 1 !== options.displayMonths;\r\n    yearsCalendar.disableLeftArrow = isYearDisabled(shiftDate(yearsCalendar.years[0][0].date, { year: -1 }), options.minDate, options.maxDate);\r\n    var i = yearsCalendar.years.length - 1;\r\n    var j = yearsCalendar.years[i].length - 1;\r\n    yearsCalendar.disableRightArrow = isYearDisabled(shiftDate(yearsCalendar.years[i][j].date, { year: 1 }), options.minDate, options.maxDate);\r\n    return yearsCalendar;\r\n}\r\n//# sourceMappingURL=flag-years-calendar.js.map",null]}