{"remainingRequest":"/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.js","dependencies":[{"path":"/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/@ng-bootstrap/ng-bootstrap/datepicker/adapters/ngb-date-native-adapter.js","mtime":499162500000},{"path":"/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/cache-loader/dist/cjs.js","mtime":1528430347272},{"path":"/home/chetan/Desktop/Chetan Git Folder/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b)\n            if (b.hasOwnProperty(p))\n                d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Injectable } from '@angular/core';\nimport { NgbDateAdapter } from './ngb-date-adapter';\nvar NgbDateNativeAdapter = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(NgbDateNativeAdapter, _super);\n    function NgbDateNativeAdapter() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    NgbDateNativeAdapter.prototype.fromModel = function (date) {\n        return (date && date.getFullYear) ? { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() } :\n            null;\n    };\n    NgbDateNativeAdapter.prototype.toModel = function (date) {\n        return date && date.year && date.month ? new Date(date.year, date.month - 1, date.day) : null;\n    };\n    return NgbDateNativeAdapter;\n}(NgbDateAdapter));\nexport { NgbDateNativeAdapter };\n//# sourceMappingURL=ngb-date-native-adapter.js.map\n",null]}