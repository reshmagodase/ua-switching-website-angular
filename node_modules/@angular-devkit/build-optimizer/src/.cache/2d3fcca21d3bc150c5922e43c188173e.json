{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\utils\\start-end-of.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\utils\\start-end-of.js","mtime":1676443216702},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { setDate, setHours, setMilliseconds, setMinutes, setMonth, setSeconds } from './date-setters';\r\nimport { cloneDate } from '../create/clone';\r\nimport { setISODayOfWeek, setLocaleDayOfWeek } from '../units/day-of-week';\r\nimport { getMonth } from './date-getters';\r\nimport { add, subtract } from '../moment/add-subtract';\r\nexport function startOf(date, unit, isUTC) {\r\n    var _date = cloneDate(date);\r\n    // the following switch intentionally omits break keywords\r\n    // to utilize falling through the cases.\r\n    switch (unit) {\r\n        case 'year':\r\n            setMonth(_date, 0, isUTC);\r\n        /* falls through */\r\n        case 'quarter':\r\n        case 'month':\r\n            setDate(_date, 1, isUTC);\r\n        /* falls through */\r\n        case 'week':\r\n        case 'isoWeek':\r\n        case 'day':\r\n        case 'date':\r\n            setHours(_date, 0, isUTC);\r\n        /* falls through */\r\n        case 'hours':\r\n            setMinutes(_date, 0, isUTC);\r\n        /* falls through */\r\n        case 'minutes':\r\n            setSeconds(_date, 0, isUTC);\r\n        /* falls through */\r\n        case 'seconds':\r\n            setMilliseconds(_date, 0, isUTC);\r\n    }\r\n    // weeks are a special case\r\n    if (unit === 'week') {\r\n        setLocaleDayOfWeek(_date, 0, { isUTC: isUTC });\r\n    }\r\n    if (unit === 'isoWeek') {\r\n        setISODayOfWeek(_date, 1);\r\n    }\r\n    // quarters are also special\r\n    if (unit === 'quarter') {\r\n        setMonth(_date, Math.floor(getMonth(_date, isUTC) / 3) * 3, isUTC);\r\n    }\r\n    return _date;\r\n}\r\nexport function endOf(date, unit, isUTC) {\r\n    var _unit = unit;\r\n    // 'date' is an alias for 'day', so it should be considered as such.\r\n    if (_unit === 'date') {\r\n        _unit = 'day';\r\n    }\r\n    var start = startOf(date, _unit, isUTC);\r\n    var _step = add(start, 1, _unit === 'isoWeek' ? 'week' : _unit, isUTC);\r\n    var res = subtract(_step, 1, 'milliseconds', isUTC);\r\n    return res;\r\n}\r\n//# sourceMappingURL=start-end-of.js.map",null]}