{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\core-js\\modules\\es6.regexp.constructor.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\core-js\\modules\\es6.regexp.constructor.js","mtime":1676443204486},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["var global = require('./_global');\r\nvar inheritIfRequired = require('./_inherit-if-required');\r\nvar dP = require('./_object-dp').f;\r\nvar gOPN = require('./_object-gopn').f;\r\nvar isRegExp = require('./_is-regexp');\r\nvar $flags = require('./_flags');\r\nvar $RegExp = global.RegExp;\r\nvar Base = $RegExp;\r\nvar proto = $RegExp.prototype;\r\nvar re1 = /a/g;\r\nvar re2 = /a/g;\r\n// \"new\" creates a new object, old webkit buggy here\r\nvar CORRECT_NEW = new $RegExp(re1) !== re1;\r\n\r\nif (require('./_descriptors') && (!CORRECT_NEW || require('./_fails')(function () {\r\n  re2[require('./_wks')('match')] = false;\r\n  // RegExp constructor can alter flags and IsRegExp works correct with @@match\r\n  return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';\r\n}))) {\r\n  $RegExp = function RegExp(p, f) {\r\n    var tiRE = this instanceof $RegExp;\r\n    var piRE = isRegExp(p);\r\n    var fiU = f === undefined;\r\n    return !tiRE && piRE && p.constructor === $RegExp && fiU ? p\r\n      : inheritIfRequired(CORRECT_NEW\r\n        ? new Base(piRE && !fiU ? p.source : p, f)\r\n        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)\r\n      , tiRE ? this : proto, $RegExp);\r\n  };\r\n  var proxy = function (key) {\r\n    key in $RegExp || dP($RegExp, key, {\r\n      configurable: true,\r\n      get: function () { return Base[key]; },\r\n      set: function (it) { Base[key] = it; }\r\n    });\r\n  };\r\n  for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);\r\n  proto.constructor = $RegExp;\r\n  $RegExp.prototype = proto;\r\n  require('./_redefine')(global, 'RegExp', $RegExp);\r\n}\r\n\r\nrequire('./_set-species')('RegExp');\r\n",null]}