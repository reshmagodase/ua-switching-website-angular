{"remainingRequest":"/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/ngx-bootstrap/chronos/parse/regex.js","dependencies":[{"path":"/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/ngx-bootstrap/chronos/parse/regex.js","mtime":1553751054626},{"path":"/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/cache-loader/dist/cjs.js","mtime":1553751054150},{"path":"/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1553751053666}],"contextDependencies":[],"result":["import { hasOwnProp, isFunction } from '../utils/type-checks';\nexport var match1 = /\\d/; //       0 - 9\nexport var match2 = /\\d\\d/; //      00 - 99\nexport var match3 = /\\d{3}/; //     000 - 999\nexport var match4 = /\\d{4}/; //    0000 - 9999\nexport var match6 = /[+-]?\\d{6}/; // -999999 - 999999\nexport var match1to2 = /\\d\\d?/; //       0 - 99\nexport var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\nexport var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\nexport var match1to3 = /\\d{1,3}/; //       0 - 999\nexport var match1to4 = /\\d{1,4}/; //       0 - 9999\nexport var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\nexport var matchUnsigned = /\\d+/; //       0 - inf\nexport var matchSigned = /[+-]?\\d+/; //    -inf - inf\nexport var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\nexport var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\nexport var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n// any word (or two) characters or numbers including two/three word month in arabic.\n// includes scottish gaelic two word and hyphenated months\n// tslint:disable-next-line\nexport var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\nvar regexes = {};\nexport function addRegexToken(token, regex, strictRegex) {\n    if (isFunction(regex)) {\n        regexes[token] = regex;\n        return;\n    }\n    regexes[token] = function (isStrict, locale) {\n        return (isStrict && strictRegex) ? strictRegex : regex;\n    };\n}\nexport function getParseRegexForToken(token, locale) {\n    var _strict = false;\n    if (!hasOwnProp(regexes, token)) {\n        return new RegExp(unescapeFormat(token));\n    }\n    return regexes[token](_strict, locale);\n}\n// Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\nfunction unescapeFormat(str) {\n    // tslint:disable-next-line\n    return regexEscape(str\n        .replace('\\\\', '')\n        .replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) { return p1 || p2 || p3 || p4; }));\n}\nexport function regexEscape(str) {\n    return str.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n}\n//# sourceMappingURL=regex.js.map",null]}