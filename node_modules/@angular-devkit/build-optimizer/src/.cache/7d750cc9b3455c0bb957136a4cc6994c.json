{"remainingRequest":"/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/ngx-bootstrap/datepicker/engine/format-days-calendar.js","dependencies":[{"path":"/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/ngx-bootstrap/datepicker/engine/format-days-calendar.js","mtime":1551251660071},{"path":"/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/cache-loader/dist/cjs.js","mtime":1551251659635},{"path":"/home/anaghajoshi/Desktop/Anagha/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1551251659207}],"contextDependencies":[],"result":["import { formatDate } from '../../chronos/format';\nimport { getLocale } from '../../chronos/locale/locales';\nexport function formatDaysCalendar(daysCalendar, formatOptions, monthIndex) {\n    return {\n        month: daysCalendar.month,\n        monthTitle: formatDate(daysCalendar.month, formatOptions.monthTitle, formatOptions.locale),\n        yearTitle: formatDate(daysCalendar.month, formatOptions.yearTitle, formatOptions.locale),\n        weekNumbers: getWeekNumbers(daysCalendar.daysMatrix, formatOptions.weekNumbers, formatOptions.locale),\n        weekdays: getShiftedWeekdays(formatOptions.locale),\n        weeks: daysCalendar.daysMatrix.map(function (week, weekIndex) {\n            return ({\n                days: week.map(function (date, dayIndex) {\n                    return ({\n                        date: date,\n                        label: formatDate(date, formatOptions.dayLabel, formatOptions.locale),\n                        monthIndex: monthIndex,\n                        weekIndex: weekIndex,\n                        dayIndex: dayIndex\n                    });\n                })\n            });\n        })\n    };\n}\nexport function getWeekNumbers(daysMatrix, format, locale) {\n    return daysMatrix.map(function (days) { return (days[0] ? formatDate(days[0], format, locale) : ''); });\n}\nexport function getShiftedWeekdays(locale) {\n    var _locale = getLocale(locale);\n    var weekdays = _locale.weekdaysShort();\n    var firstDayOfWeek = _locale.firstDayOfWeek();\n    return weekdays.slice(firstDayOfWeek).concat(weekdays.slice(0, firstDayOfWeek));\n}\n//# sourceMappingURL=format-days-calendar.js.map",null]}