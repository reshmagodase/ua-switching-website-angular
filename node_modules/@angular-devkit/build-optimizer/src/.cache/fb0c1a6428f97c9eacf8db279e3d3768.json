{"remainingRequest":"/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/core-js/modules/es6.date.to-string.js","dependencies":[{"path":"/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/core-js/modules/es6.date.to-string.js","mtime":1548147565250},{"path":"/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/cache-loader/dist/cjs.js","mtime":1548147565162},{"path":"/home/dnyaneshwar/scriptlansProjects/uaswitchingwebsiteangular/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1548147564270}],"contextDependencies":[],"result":["var DateProto = Date.prototype;\nvar INVALID_DATE = 'Invalid Date';\nvar TO_STRING = 'toString';\nvar $toString = DateProto[TO_STRING];\nvar getTime = DateProto.getTime;\nif (new Date(NaN) + '' != INVALID_DATE) {\n  require('./_redefine')(DateProto, TO_STRING, function toString() {\n    var value = getTime.call(this);\n    // eslint-disable-next-line no-self-compare\n    return value === value ? $toString.call(this) : INVALID_DATE;\n  });\n}\n",null]}