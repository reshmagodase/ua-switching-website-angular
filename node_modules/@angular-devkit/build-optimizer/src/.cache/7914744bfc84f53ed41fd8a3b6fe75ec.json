{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\parse\\token.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\parse\\token.js","mtime":1676443216590},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { hasOwnProp, isArray, isFunction, isNumber, isString, toInt } from '../utils/type-checks';\r\nvar tokens = {};\r\nexport function addParseToken(token, callback) {\r\n    var _token = isString(token) ? [token] : token;\r\n    var func = callback;\r\n    if (isNumber(callback)) {\r\n        func = function (input, array, config) {\r\n            array[callback] = toInt(input);\r\n            return config;\r\n        };\r\n    }\r\n    if (isArray(_token) && isFunction(func)) {\r\n        var i = void 0;\r\n        for (i = 0; i < _token.length; i++) {\r\n            tokens[_token[i]] = func;\r\n        }\r\n    }\r\n}\r\nexport function addWeekParseToken(token, callback) {\r\n    addParseToken(token, function (input, array, config, _token) {\r\n        config._w = config._w || {};\r\n        return callback(input, config._w, config, _token);\r\n    });\r\n}\r\nexport function addTimeToArrayFromToken(token, input, config) {\r\n    if (input != null && hasOwnProp(tokens, token)) {\r\n        tokens[token](input, config._a, config, token);\r\n    }\r\n    return config;\r\n}\r\n//# sourceMappingURL=token.js.map",null]}