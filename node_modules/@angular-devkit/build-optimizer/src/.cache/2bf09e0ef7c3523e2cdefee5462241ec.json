{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\duration\\bubble.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\chronos\\duration\\bubble.js","mtime":1676443216335},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { absFloor } from '../utils';\r\nimport { absCeil } from '../utils/abs-ceil';\r\nexport function bubble(dur) {\r\n    var milliseconds = dur._milliseconds;\r\n    var days = dur._days;\r\n    var months = dur._months;\r\n    var data = dur._data;\r\n    // if we have a mix of positive and negative values, bubble down first\r\n    // check: https://github.com/moment/moment/issues/2166\r\n    if (!((milliseconds >= 0 && days >= 0 && months >= 0) ||\r\n        (milliseconds <= 0 && days <= 0 && months <= 0))) {\r\n        milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\r\n        days = 0;\r\n        months = 0;\r\n    }\r\n    // The following code bubbles up values, see the tests for\r\n    // examples of what that means.\r\n    data.milliseconds = milliseconds % 1000;\r\n    var seconds = absFloor(milliseconds / 1000);\r\n    data.seconds = seconds % 60;\r\n    var minutes = absFloor(seconds / 60);\r\n    data.minutes = minutes % 60;\r\n    var hours = absFloor(minutes / 60);\r\n    data.hours = hours % 24;\r\n    days += absFloor(hours / 24);\r\n    // convert days to months\r\n    var monthsFromDays = absFloor(daysToMonths(days));\r\n    months += monthsFromDays;\r\n    days -= absCeil(monthsToDays(monthsFromDays));\r\n    // 12 months -> 1 year\r\n    var years = absFloor(months / 12);\r\n    months %= 12;\r\n    data.day = days;\r\n    data.month = months;\r\n    data.year = years;\r\n    return dur;\r\n}\r\nexport function daysToMonths(day) {\r\n    // 400 years have 146097 days (taking into account leap year rules)\r\n    // 400 years have 12 months === 4800\r\n    return day * 4800 / 146097;\r\n}\r\nexport function monthsToDays(month) {\r\n    // the reverse of daysToMonths\r\n    return month * 146097 / 4800;\r\n}\r\n//# sourceMappingURL=bubble.js.map",null]}