{"remainingRequest":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js??ref--8-1!C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\datepicker\\reducer\\bs-datepicker.effects.js","dependencies":[{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\ngx-bootstrap\\datepicker\\reducer\\bs-datepicker.effects.js","mtime":1676443216889},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1676443201610},{"path":"C:\\Users\\chinm\\Downloads\\uaswitchingwebsiteangular\\node_modules\\@angular-devkit\\build-optimizer\\src\\build-optimizer\\webpack-loader.js","mtime":1676443192566}],"contextDependencies":[],"result":["import { Injectable } from '@angular/core';\nimport { getFullYear, getMonth } from '../../chronos/utils/date-getters';\nimport { BsDatepickerActions } from './bs-datepicker.actions';\nimport { BsLocaleService } from '../bs-locale.service';\nimport { filter, map } from 'rxjs/operators';\nvar BsDatepickerEffects = /** @class */ /*@__PURE__*/ (function () {\n    function BsDatepickerEffects(_actions, _localeService) {\n        this._actions = _actions;\n        this._localeService = _localeService;\n        this._subs = [];\n    }\n    BsDatepickerEffects.prototype.init = function (_bsDatepickerStore) {\n        this._store = _bsDatepickerStore;\n        return this;\n    };\n    /** setters */\n    /** setters */\n    BsDatepickerEffects.prototype.setValue = /** setters */\n        function (value) {\n            this._store.dispatch(this._actions.select(value));\n        };\n    BsDatepickerEffects.prototype.setRangeValue = function (value) {\n        this._store.dispatch(this._actions.selectRange(value));\n    };\n    BsDatepickerEffects.prototype.setMinDate = function (value) {\n        this._store.dispatch(this._actions.minDate(value));\n        return this;\n    };\n    BsDatepickerEffects.prototype.setMaxDate = function (value) {\n        this._store.dispatch(this._actions.maxDate(value));\n        return this;\n    };\n    BsDatepickerEffects.prototype.setDisabled = function (value) {\n        this._store.dispatch(this._actions.isDisabled(value));\n        return this;\n    };\n    /* Set rendering options */\n    /* Set rendering options */\n    BsDatepickerEffects.prototype.setOptions = /* Set rendering options */\n        function (_config) {\n            var _options = Object.assign({ locale: this._localeService.currentLocale }, _config);\n            this._store.dispatch(this._actions.setOptions(_options));\n            return this;\n        };\n    /** view to mode bindings */\n    /** view to mode bindings */\n    BsDatepickerEffects.prototype.setBindings = /** view to mode bindings */\n        function (container) {\n            container.daysCalendar = this._store\n                .select(function (state) { return state.flaggedMonths; })\n                .pipe(filter(function (months) { return !!months; }));\n            // month calendar\n            container.monthsCalendar = this._store\n                .select(function (state) { return state.flaggedMonthsCalendar; })\n                .pipe(filter(function (months) { return !!months; }));\n            // year calendar\n            container.yearsCalendar = this._store\n                .select(function (state) { return state.yearsCalendarFlagged; })\n                .pipe(filter(function (years) { return !!years; }));\n            container.viewMode = this._store.select(function (state) { return state.view.mode; });\n            container.options = this._store\n                .select(function (state) { return state.showWeekNumbers; })\n                .pipe(map(function (showWeekNumbers) { return ({ showWeekNumbers: showWeekNumbers }); }));\n            return this;\n        };\n    /** event handlers */\n    /** event handlers */\n    BsDatepickerEffects.prototype.setEventHandlers = /** event handlers */\n        function (container) {\n            var _this = this;\n            container.setViewMode = function (event) {\n                _this._store.dispatch(_this._actions.changeViewMode(event));\n            };\n            container.navigateTo = function (event) {\n                _this._store.dispatch(_this._actions.navigateStep(event.step));\n            };\n            container.dayHoverHandler = function (event) {\n                var _cell = event.cell;\n                if (_cell.isOtherMonth || _cell.isDisabled) {\n                    return;\n                }\n                _this._store.dispatch(_this._actions.hoverDay(event));\n                _cell.isHovered = event.isHovered;\n            };\n            container.monthHoverHandler = function (event) {\n                event.cell.isHovered = event.isHovered;\n            };\n            container.yearHoverHandler = function (event) {\n                event.cell.isHovered = event.isHovered;\n            };\n            /** select handlers */\n            // container.daySelectHandler = (day: DayViewModel): void => {\n            //   if (day.isOtherMonth || day.isDisabled) {\n            //     return;\n            //   }\n            //   this._store.dispatch(this._actions.select(day.date));\n            // };\n            container.monthSelectHandler = function (event) {\n                if (event.isDisabled) {\n                    return;\n                }\n                _this._store.dispatch(_this._actions.navigateTo({\n                    unit: { month: getMonth(event.date) },\n                    viewMode: 'day'\n                }));\n            };\n            container.yearSelectHandler = function (event) {\n                if (event.isDisabled) {\n                    return;\n                }\n                _this._store.dispatch(_this._actions.navigateTo({\n                    unit: { year: getFullYear(event.date) },\n                    viewMode: 'month'\n                }));\n            };\n            return this;\n        };\n    BsDatepickerEffects.prototype.registerDatepickerSideEffects = function () {\n        var _this = this;\n        this._subs.push(this._store.select(function (state) { return state.view; }).subscribe(function (view) {\n            _this._store.dispatch(_this._actions.calculate());\n        }));\n        // format calendar values on month model change\n        this._subs.push(this._store\n            .select(function (state) { return state.monthsModel; })\n            .pipe(filter(function (monthModel) { return !!monthModel; }))\n            .subscribe(function (month) { return _this._store.dispatch(_this._actions.format()); }));\n        // flag day values\n        this._subs.push(this._store\n            .select(function (state) { return state.formattedMonths; })\n            .pipe(filter(function (month) { return !!month; }))\n            .subscribe(function (month) { return _this._store.dispatch(_this._actions.flag()); }));\n        // flag day values\n        this._subs.push(this._store\n            .select(function (state) { return state.selectedDate; })\n            .pipe(filter(function (selectedDate) { return !!selectedDate; }))\n            .subscribe(function (selectedDate) { return _this._store.dispatch(_this._actions.flag()); }));\n        // flag for date range picker\n        this._subs.push(this._store\n            .select(function (state) { return state.selectedRange; })\n            .pipe(filter(function (selectedRange) { return !!selectedRange; }))\n            .subscribe(function (selectedRange) { return _this._store.dispatch(_this._actions.flag()); }));\n        // monthsCalendar\n        this._subs.push(this._store\n            .select(function (state) { return state.monthsCalendar; })\n            .subscribe(function () { return _this._store.dispatch(_this._actions.flag()); }));\n        // years calendar\n        this._subs.push(this._store\n            .select(function (state) { return state.yearsCalendarModel; })\n            .pipe(filter(function (state) { return !!state; }))\n            .subscribe(function () { return _this._store.dispatch(_this._actions.flag()); }));\n        // on hover\n        this._subs.push(this._store\n            .select(function (state) { return state.hoveredDate; })\n            .pipe(filter(function (hoveredDate) { return !!hoveredDate; }))\n            .subscribe(function (hoveredDate) { return _this._store.dispatch(_this._actions.flag()); }));\n        // on locale change\n        this._subs.push(this._localeService.localeChange\n            .subscribe(function (locale) { return _this._store.dispatch(_this._actions.setLocale(locale)); }));\n        return this;\n    };\n    BsDatepickerEffects.prototype.destroy = function () {\n        for (var _i = 0, _a = this._subs; _i < _a.length; _i++) {\n            var sub = _a[_i];\n            sub.unsubscribe();\n        }\n    };\n    return BsDatepickerEffects;\n}());\nexport { BsDatepickerEffects };\n//# sourceMappingURL=bs-datepicker.effects.js.map\n",null]}